---
import { createNewPageObject } from "@/lib/actions/page";
import { Languages } from "@/lib/enums";
import { storeNewPage, getExistingPagePathsAndIds } from "@/lib/db/page-actions";

type AddPageErrors = {
  slugRequired?: string;
};

const errors: AddPageErrors = {};
if (Astro.request.method === "POST") {
  const data = await Astro.request.formData();
  const slug = data.get("slug") as string;
  const parentId = data.get("parentId") as string;
  if (!slug) {
    errors.slugRequired = "Slug is required";
  }
  const pageObject = await createNewPageObject({
    language: Languages.Default,
    slug,
    parentId: parentId === "" ? undefined : parentId,
  });
  await storeNewPage(pageObject);
}

const existingPagePaths = await getExistingPagePathsAndIds();
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <form method="POST">
      <input type="text" name="slug" placeholder="Slug" />
      {errors.slugRequired && <p>{errors.slugRequired}</p>}
      <select name="parentId">
        <option value="" selected>None</option>
        {existingPagePaths?.map(({ _id, path }) => <option value={_id}>{path}</option>)}
      </select>
      <button type="submit">Create Page</button>
    </form>
  </body>
</html>
